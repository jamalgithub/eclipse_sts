<?xml version="1.0" encoding="UTF-8"?>
<!-- Source project: sip05, branch: 02 (Maven Project) -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:flow="http://www.springframework.org/schema/webflow-config"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

  <!-- Reuse the "conversionService" that is already being used by your Spring 
		MVC project. See the dispatcherServlet-context.xml file for details. -->
  <bean id="webflowConversionService"	class="org.springframework.binding.convert.service.DefaultConversionService">
		<constructor-arg ref="conversionService" />
  </bean>

  <bean id="securityFlowExecutionListener" class="org.springframework.webflow.security.SecurityFlowExecutionListener"/>
  
  <flow:flow-builder-services id="flowBuilderServices"  development="true" validator="validator" conversion-service="webflowConversionService"/>
  
  <!-- responsible for creating and executing flows -->
  <flow:flow-executor id="flowExecutor" flow-registry="flowRegistry">
  	<!--  make Spring Security aware of SWF -->
  	<flow:flow-execution-listeners>
      <flow:listener ref="securityFlowExecutionListener"/>
    </flow:flow-execution-listeners>
  </flow:flow-executor>

  <!-- 
    The flow-registry definition below is based on naming conventions.
    
  	With the below configuration, you can execute this flow by visiting:
  	http://localhost:8080/spring-soccer/test
  	This is because the path immediately following the base path, currently "test",
  	will be used as the flow ID.
  	
  <flow:flow-registry id="flowRegistry" base-path="/WEB-INF/flows" flow-builder-services="flowBuilderServices">
    <flow:flow-location-pattern value="/**/*-flow.xml" />
  </flow:flow-registry>
  -->
      
  <!--   
  	If a common naming strategy/convention is not used, you can explicitly
  	define the location of your flow definition files.
  	
  	With the below configuration, you can execute this flow by visiting:
  	http://localhost:8080/spring-soccer/testWebFlow
  -->
  <!-- <flow:flow-registry id="flowRegistry" base-path="/WEB-INF/flows">
    <flow:flow-location id="testWebFlow" path="/test/helloWorld-flow.xml"/>
  </flow:flow-registry> -->
  
  <!-- responsible  for  loading  flow  definitions and make them available to the flow executor
  	whithout id, the flow’s ID is derived from the base name of the flow definition file.
  	any directory after the base path, represented by the two asterisks **, would represent the flow ID -->
  <flow:flow-registry id="flowRegistry" base-path="/WEB-INF/flows" flow-builder-services="flowBuilderServices">
    <flow:flow-location-pattern value="/**/*-flow.xml" />
  </flow:flow-registry>
  
  <!-- joins the Spring MVC DispatcherServlet and the flow executor
  	 handles requests coming in for a flow and processes those requests -->
  <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter" p:flowExecutor-ref="flowExecutor"/> 

  <!-- makes the FlowHandlerAdapter and DispatcherServlet aware of all the flow IDs available in your registry
  	 map a request’s URL pattern to Spring Web Flow -->
  <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping" p:flowRegistry-ref="flowRegistry" p:order="0"/>   

  <bean id="propertyEditorRegistrar" class="com.springinpractice.ch05.beans.CustomPropertyEditorRegistrar"/>
  
  <!--  actions -->
  <bean id="findExistingPlayerFormAction" class="org.springframework.webflow.action.FormAction"
  	p:propertyEditorRegistrar-ref="propertyEditorRegistrar"
  	p:formObjectClass="com.springinpractice.ch05.domain.search.PlayerSearchCriteria"       
  />
  
  <bean id="newAccountFormAction" class="org.springframework.webflow.action.FormAction">
    <property name="formObjectClass" value="com.springinpractice.ch05.form.AccountForm"/>
    <property name="propertyEditorRegistrar" ref="propertyEditorRegistrar"/>            
  </bean>
  
  <bean id="playerActions" class="com.springinpractice.ch05.webflow.action.PlayerActions" 
  	p:playerService-ref="playerService"
  />
  
  <bean id="findExistingPlayerAction" class="com.springinpractice.ch05.webflow.action.FindExistingPlayerAction" 
  	p:playerService-ref="playerService"	
  />
  
  <bean id="exceptionAction" class="com.springinpractice.ch05.webflow.action.ExceptionAction" />

</beans>