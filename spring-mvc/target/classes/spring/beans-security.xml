<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">
		
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/employee/add" access="hasRole('admin')" />
		<intercept-url pattern="/employee/add/" access="hasRole('admin')" />
		<intercept-url pattern="/employee/edit/**" access="hasRole('admin')" />
		<intercept-url pattern="/employee/delete/**" access="hasRole('admin')" />
		<intercept-url pattern="/employee/**" access="isAuthenticated()" />
		<!-- <form-login login-page="/login" authentication-failure-url="/login?failed=true" default-target-url="/employee" /> -->
		<form-login login-page="/login" authentication-failure-handler-ref="authentificationFailureListener" authentication-success-handler-ref="authentificationSuccessListener" />
		<remember-me />
		<logout logout-success-url="/login" />
	</http>
	
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="sha-256"/>			
		</authentication-provider>
	</authentication-manager>
	
	<!-- <authentication-manager>
		<authentication-provider>
			<password-encoder hash="sha-256"/>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username, password, status from user where username = ?"
				authorities-by-username-query="select u.username, r.rolename from user u, role r, user_role ur
					 where ur.user_id = u.id and ur.role_id = r.id and u.username = ?" 
			/>			
		</authentication-provider>
	</authentication-manager> -->
	
	<!-- <authentication-manager>
		<authentication-provider>
			<password-encoder hash="sha-256"/>								 
			<user-service>
				<user name="juan" password="ed08c290d7e22f7bb324b15cbadce35b0b348564fd2d5f95752388d86d71bcca" authorities="user,admin" /> password="juan"
				<user name="elvira" password="0fd205965ce169b5c023282bb5fa2e239b6716726db5defaa8ceff225be805dc" authorities="user" /> password="p@ssword"
			</user-service>
		</authentication-provider>
	</authentication-manager> -->
	
	<!-- filter -->
	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"
		p:userDetailsService-ref="userDetailsService"
	/>
	
	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<beans:constructor-arg name="providers">
			<beans:list>
				<beans:ref bean="daoAuthenticationProvider"/>
			</beans:list>
		</beans:constructor-arg>		
	</beans:bean>
	
	<beans:bean id="authentificationFailureListener" class="np.com.mshrestha.bookstore.filter.AuthentificationFailureListener"/>
	<beans:bean id="authentificationSuccessListener" class="np.com.mshrestha.bookstore.filter.AuthentificationSuccessListener"/>
</beans:beans>