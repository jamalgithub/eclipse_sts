<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- <context:property-placeholder location="classpath*:META-INF/*.properties" /> -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" p:location="classpath:database.properties"/>
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Classpath scanning of @Component, @Service, etc annotated class -->
	<context:component-scan base-package="com.journaldev.spring" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean	class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:prefix="/WEB-INF/views/" 
		p:suffix=".jsp"
	/>		

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"	destroy-method="close"
		p:driverClassName="${database.driver}"
		p:url="${database.url}"
		p:username="${database.user}"
		p:password="${database.password}"		
	/>
	
	<util:properties id="hjProperties">
		<beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
		<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
		<beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop>
	</util:properties>

	<!-- EntityManagerFactory -->	
  	<!-- <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
  		p:persistenceUnitName="persistenceUnit"
  		p:dataSource-ref="dataSource"
  	/> -->
  
	<!-- Hibernate 4 SessionFactory Bean definition -->	
	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource"
		p:packagesToScan="com.journaldev.spring.model"
		p:hibernateProperties-ref="hjProperties"
	/>		
	
	<!-- Enable @Transactional annotation -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- Transaction Manager is required for Spring ORM to support hibernate session transaction management -->	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager" 
		p:sessionFactory-ref="sessionFactory"
	/>
	
	<!-- <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" 		
	/> -->	

</beans:beans>
